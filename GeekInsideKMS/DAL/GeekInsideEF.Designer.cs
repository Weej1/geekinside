//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_UserEmployee_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Department), "UserEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.UserEmployee), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_Document_FileType", "FileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.FileType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Document), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_Document_Folder", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Folder), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Document), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_DocumentTag_Document", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Document), "DocumentTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.DocumentTag), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_Favorite_Document", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Document), "Favorite", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Favorite), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_DocumentTag_Tag", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Tag), "DocumentTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.DocumentTag), true)]
[assembly: EdmRelationshipAttribute("geekinsidekmsModel", "FK_Department_Folder", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Folder), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Department), true)]

#endregion

namespace DAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class geekinsidekmsEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“geekinsidekmsEntities”部分中的连接字符串初始化新 geekinsidekmsEntities 对象。
        /// </summary>
        public geekinsidekmsEntities() : base("name=geekinsidekmsEntities", "geekinsidekmsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 geekinsidekmsEntities 对象。
        /// </summary>
        public geekinsidekmsEntities(string connectionString) : base(connectionString, "geekinsidekmsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 geekinsidekmsEntities 对象。
        /// </summary>
        public geekinsidekmsEntities(EntityConnection connection) : base(connection, "geekinsidekmsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DocumentTag> DocumentTags
        {
            get
            {
                if ((_DocumentTags == null))
                {
                    _DocumentTags = base.CreateObjectSet<DocumentTag>("DocumentTags");
                }
                return _DocumentTags;
            }
        }
        private ObjectSet<DocumentTag> _DocumentTags;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Favorite> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorite>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorite> _Favorites;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FileType> FileTypes
        {
            get
            {
                if ((_FileTypes == null))
                {
                    _FileTypes = base.CreateObjectSet<FileType>("FileTypes");
                }
                return _FileTypes;
            }
        }
        private ObjectSet<FileType> _FileTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Folder> Folders
        {
            get
            {
                if ((_Folders == null))
                {
                    _Folders = base.CreateObjectSet<Folder>("Folders");
                }
                return _Folders;
            }
        }
        private ObjectSet<Folder> _Folders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SiteConfig> SiteConfigs
        {
            get
            {
                if ((_SiteConfigs == null))
                {
                    _SiteConfigs = base.CreateObjectSet<SiteConfig>("SiteConfigs");
                }
                return _SiteConfigs;
            }
        }
        private ObjectSet<SiteConfig> _SiteConfigs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SiteNews> SiteNews
        {
            get
            {
                if ((_SiteNews == null))
                {
                    _SiteNews = base.CreateObjectSet<SiteNews>("SiteNews");
                }
                return _SiteNews;
            }
        }
        private ObjectSet<SiteNews> _SiteNews;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserAdmin> UserAdmins
        {
            get
            {
                if ((_UserAdmins == null))
                {
                    _UserAdmins = base.CreateObjectSet<UserAdmin>("UserAdmins");
                }
                return _UserAdmins;
            }
        }
        private ObjectSet<UserAdmin> _UserAdmins;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserEmployee> UserEmployees
        {
            get
            {
                if ((_UserEmployees == null))
                {
                    _UserEmployees = base.CreateObjectSet<UserEmployee>("UserEmployees");
                }
                return _UserEmployees;
            }
        }
        private ObjectSet<UserEmployee> _UserEmployees;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserEmployeeDetail> UserEmployeeDetails
        {
            get
            {
                if ((_UserEmployeeDetails == null))
                {
                    _UserEmployeeDetails = base.CreateObjectSet<UserEmployeeDetail>("UserEmployeeDetails");
                }
                return _UserEmployeeDetails;
            }
        }
        private ObjectSet<UserEmployeeDetail> _UserEmployeeDetails;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Departments EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// 用于向 Documents EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// 用于向 DocumentTags EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDocumentTags(DocumentTag documentTag)
        {
            base.AddObject("DocumentTags", documentTag);
        }
    
        /// <summary>
        /// 用于向 Favorites EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFavorites(Favorite favorite)
        {
            base.AddObject("Favorites", favorite);
        }
    
        /// <summary>
        /// 用于向 FileTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFileTypes(FileType fileType)
        {
            base.AddObject("FileTypes", fileType);
        }
    
        /// <summary>
        /// 用于向 Folders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFolders(Folder folder)
        {
            base.AddObject("Folders", folder);
        }
    
        /// <summary>
        /// 用于向 SiteConfigs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSiteConfigs(SiteConfig siteConfig)
        {
            base.AddObject("SiteConfigs", siteConfig);
        }
    
        /// <summary>
        /// 用于向 SiteNews EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSiteNews(SiteNews siteNews)
        {
            base.AddObject("SiteNews", siteNews);
        }
    
        /// <summary>
        /// 用于向 Tags EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// 用于向 UserAdmins EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserAdmins(UserAdmin userAdmin)
        {
            base.AddObject("UserAdmins", userAdmin);
        }
    
        /// <summary>
        /// 用于向 UserEmployees EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserEmployees(UserEmployee userEmployee)
        {
            base.AddObject("UserEmployees", userEmployee);
        }
    
        /// <summary>
        /// 用于向 UserEmployeeDetails EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserEmployeeDetails(UserEmployeeDetail userEmployeeDetail)
        {
            base.AddObject("UserEmployeeDetails", userEmployeeDetail);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Department 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="departmentName">DepartmentName 属性的初始值。</param>
        /// <param name="folderId">FolderId 属性的初始值。</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String departmentName, global::System.Int32 folderId)
        {
            Department department = new Department();
            department.Id = id;
            department.DepartmentName = departmentName;
            department.FolderId = folderId;
            return department;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_UserEmployee_Department", "UserEmployee")]
        public EntityCollection<UserEmployee> UserEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEmployee>("geekinsidekmsModel.FK_UserEmployee_Department", "UserEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEmployee>("geekinsidekmsModel.FK_UserEmployee_Department", "UserEmployee", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Department_Folder", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Department_Folder", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Department_Folder", "Folder").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Department_Folder", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("geekinsidekmsModel.FK_Department_Folder", "Folder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Document 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="fileDisplayName">FileDisplayName 属性的初始值。</param>
        /// <param name="fileDiskName">FileDiskName 属性的初始值。</param>
        /// <param name="description">Description 属性的初始值。</param>
        /// <param name="folderId">FolderId 属性的初始值。</param>
        /// <param name="fileTypeId">FileTypeId 属性的初始值。</param>
        /// <param name="publisherNumber">PublisherNumber 属性的初始值。</param>
        /// <param name="publisherName">PublisherName 属性的初始值。</param>
        /// <param name="pubTime">PubTime 属性的初始值。</param>
        /// <param name="checkerNumber">CheckerNumber 属性的初始值。</param>
        /// <param name="checkerName">CheckerName 属性的初始值。</param>
        /// <param name="size">Size 属性的初始值。</param>
        /// <param name="viewNumber">ViewNumber 属性的初始值。</param>
        /// <param name="downloadNumber">DownloadNumber 属性的初始值。</param>
        /// <param name="isChecked">IsChecked 属性的初始值。</param>
        /// <param name="authLevel">AuthLevel 属性的初始值。</param>
        public static Document CreateDocument(global::System.Int32 id, global::System.String fileDisplayName, global::System.String fileDiskName, global::System.String description, global::System.Int32 folderId, global::System.Int32 fileTypeId, global::System.Int32 publisherNumber, global::System.String publisherName, global::System.DateTime pubTime, global::System.Int32 checkerNumber, global::System.String checkerName, global::System.String size, global::System.Int32 viewNumber, global::System.Int32 downloadNumber, global::System.Boolean isChecked, global::System.Int32 authLevel)
        {
            Document document = new Document();
            document.Id = id;
            document.FileDisplayName = fileDisplayName;
            document.FileDiskName = fileDiskName;
            document.Description = description;
            document.FolderId = folderId;
            document.FileTypeId = fileTypeId;
            document.PublisherNumber = publisherNumber;
            document.PublisherName = publisherName;
            document.PubTime = pubTime;
            document.CheckerNumber = checkerNumber;
            document.CheckerName = checkerName;
            document.Size = size;
            document.ViewNumber = viewNumber;
            document.DownloadNumber = downloadNumber;
            document.IsChecked = isChecked;
            document.AuthLevel = authLevel;
            return document;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileDisplayName
        {
            get
            {
                return _FileDisplayName;
            }
            set
            {
                OnFileDisplayNameChanging(value);
                ReportPropertyChanging("FileDisplayName");
                _FileDisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileDisplayName");
                OnFileDisplayNameChanged();
            }
        }
        private global::System.String _FileDisplayName;
        partial void OnFileDisplayNameChanging(global::System.String value);
        partial void OnFileDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileDiskName
        {
            get
            {
                return _FileDiskName;
            }
            set
            {
                OnFileDiskNameChanging(value);
                ReportPropertyChanging("FileDiskName");
                _FileDiskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileDiskName");
                OnFileDiskNameChanged();
            }
        }
        private global::System.String _FileDiskName;
        partial void OnFileDiskNameChanging(global::System.String value);
        partial void OnFileDiskNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int32 _FolderId;
        partial void OnFolderIdChanging(global::System.Int32 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                OnFileTypeIdChanging(value);
                ReportPropertyChanging("FileTypeId");
                _FileTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeId");
                OnFileTypeIdChanged();
            }
        }
        private global::System.Int32 _FileTypeId;
        partial void OnFileTypeIdChanging(global::System.Int32 value);
        partial void OnFileTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublisherNumber
        {
            get
            {
                return _PublisherNumber;
            }
            set
            {
                OnPublisherNumberChanging(value);
                ReportPropertyChanging("PublisherNumber");
                _PublisherNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublisherNumber");
                OnPublisherNumberChanged();
            }
        }
        private global::System.Int32 _PublisherNumber;
        partial void OnPublisherNumberChanging(global::System.Int32 value);
        partial void OnPublisherNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PublisherName
        {
            get
            {
                return _PublisherName;
            }
            set
            {
                OnPublisherNameChanging(value);
                ReportPropertyChanging("PublisherName");
                _PublisherName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PublisherName");
                OnPublisherNameChanged();
            }
        }
        private global::System.String _PublisherName;
        partial void OnPublisherNameChanging(global::System.String value);
        partial void OnPublisherNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PubTime
        {
            get
            {
                return _PubTime;
            }
            set
            {
                OnPubTimeChanging(value);
                ReportPropertyChanging("PubTime");
                _PubTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PubTime");
                OnPubTimeChanged();
            }
        }
        private global::System.DateTime _PubTime;
        partial void OnPubTimeChanging(global::System.DateTime value);
        partial void OnPubTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckerNumber
        {
            get
            {
                return _CheckerNumber;
            }
            set
            {
                OnCheckerNumberChanging(value);
                ReportPropertyChanging("CheckerNumber");
                _CheckerNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckerNumber");
                OnCheckerNumberChanged();
            }
        }
        private global::System.Int32 _CheckerNumber;
        partial void OnCheckerNumberChanging(global::System.Int32 value);
        partial void OnCheckerNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckerName
        {
            get
            {
                return _CheckerName;
            }
            set
            {
                OnCheckerNameChanging(value);
                ReportPropertyChanging("CheckerName");
                _CheckerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CheckerName");
                OnCheckerNameChanged();
            }
        }
        private global::System.String _CheckerName;
        partial void OnCheckerNameChanging(global::System.String value);
        partial void OnCheckerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewNumber
        {
            get
            {
                return _ViewNumber;
            }
            set
            {
                OnViewNumberChanging(value);
                ReportPropertyChanging("ViewNumber");
                _ViewNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewNumber");
                OnViewNumberChanged();
            }
        }
        private global::System.Int32 _ViewNumber;
        partial void OnViewNumberChanging(global::System.Int32 value);
        partial void OnViewNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadNumber
        {
            get
            {
                return _DownloadNumber;
            }
            set
            {
                OnDownloadNumberChanging(value);
                ReportPropertyChanging("DownloadNumber");
                _DownloadNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DownloadNumber");
                OnDownloadNumberChanged();
            }
        }
        private global::System.Int32 _DownloadNumber;
        partial void OnDownloadNumberChanging(global::System.Int32 value);
        partial void OnDownloadNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsChecked
        {
            get
            {
                return _IsChecked;
            }
            set
            {
                OnIsCheckedChanging(value);
                ReportPropertyChanging("IsChecked");
                _IsChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChecked");
                OnIsCheckedChanged();
            }
        }
        private global::System.Boolean _IsChecked;
        partial void OnIsCheckedChanging(global::System.Boolean value);
        partial void OnIsCheckedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthLevel
        {
            get
            {
                return _AuthLevel;
            }
            set
            {
                OnAuthLevelChanging(value);
                ReportPropertyChanging("AuthLevel");
                _AuthLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthLevel");
                OnAuthLevelChanged();
            }
        }
        private global::System.Int32 _AuthLevel;
        partial void OnAuthLevelChanging(global::System.Int32 value);
        partial void OnAuthLevelChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Document_FileType", "FileType")]
        public FileType FileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("geekinsidekmsModel.FK_Document_FileType", "FileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("geekinsidekmsModel.FK_Document_FileType", "FileType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileType> FileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("geekinsidekmsModel.FK_Document_FileType", "FileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileType>("geekinsidekmsModel.FK_Document_FileType", "FileType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Document_Folder", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Document_Folder", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Document_Folder", "Folder").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("geekinsidekmsModel.FK_Document_Folder", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("geekinsidekmsModel.FK_Document_Folder", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_DocumentTag_Document", "DocumentTag")]
        public EntityCollection<DocumentTag> DocumentTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentTag>("geekinsidekmsModel.FK_DocumentTag_Document", "DocumentTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentTag>("geekinsidekmsModel.FK_DocumentTag_Document", "DocumentTag", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Favorite_Document", "Favorite")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("geekinsidekmsModel.FK_Favorite_Document", "Favorite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("geekinsidekmsModel.FK_Favorite_Document", "Favorite", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="DocumentTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentTag : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DocumentTag 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="documentId">DocumentId 属性的初始值。</param>
        /// <param name="tagId">TagId 属性的初始值。</param>
        public static DocumentTag CreateDocumentTag(global::System.Int32 id, global::System.Int32 documentId, global::System.Int32 tagId)
        {
            DocumentTag documentTag = new DocumentTag();
            documentTag.Id = id;
            documentTag.DocumentId = documentId;
            documentTag.TagId = tagId;
            return documentTag;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_DocumentTag_Document", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_DocumentTag_Document", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_DocumentTag_Document", "Document").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_DocumentTag_Document", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("geekinsidekmsModel.FK_DocumentTag_Document", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_DocumentTag_Tag", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("geekinsidekmsModel.FK_DocumentTag_Tag", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("geekinsidekmsModel.FK_DocumentTag_Tag", "Tag").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("geekinsidekmsModel.FK_DocumentTag_Tag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("geekinsidekmsModel.FK_DocumentTag_Tag", "Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="Favorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Favorite : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Favorite 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="employeeNumber">EmployeeNumber 属性的初始值。</param>
        /// <param name="documentId">DocumentId 属性的初始值。</param>
        public static Favorite CreateFavorite(global::System.Int32 id, global::System.Int32 employeeNumber, global::System.Int32 documentId)
        {
            Favorite favorite = new Favorite();
            favorite.Id = id;
            favorite.EmployeeNumber = employeeNumber;
            favorite.DocumentId = documentId;
            return favorite;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeNumber
        {
            get
            {
                return _EmployeeNumber;
            }
            set
            {
                OnEmployeeNumberChanging(value);
                ReportPropertyChanging("EmployeeNumber");
                _EmployeeNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeNumber");
                OnEmployeeNumberChanged();
            }
        }
        private global::System.Int32 _EmployeeNumber;
        partial void OnEmployeeNumberChanging(global::System.Int32 value);
        partial void OnEmployeeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Favorite_Document", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_Favorite_Document", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_Favorite_Document", "Document").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("geekinsidekmsModel.FK_Favorite_Document", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("geekinsidekmsModel.FK_Favorite_Document", "Document", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="FileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FileType 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static FileType CreateFileType(global::System.Int32 id)
        {
            FileType fileType = new FileType();
            fileType.Id = id;
            return fileType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Document_FileType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("geekinsidekmsModel.FK_Document_FileType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("geekinsidekmsModel.FK_Document_FileType", "Document", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Folder 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="folderName">FolderName 属性的初始值。</param>
        /// <param name="parentId">ParentId 属性的初始值。</param>
        /// <param name="physicalPath">PhysicalPath 属性的初始值。</param>
        public static Folder CreateFolder(global::System.Int32 id, global::System.String folderName, global::System.Int32 parentId, global::System.String physicalPath)
        {
            Folder folder = new Folder();
            folder.Id = id;
            folder.FolderName = folderName;
            folder.ParentId = parentId;
            folder.PhysicalPath = physicalPath;
            return folder;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FolderName
        {
            get
            {
                return _FolderName;
            }
            set
            {
                OnFolderNameChanging(value);
                ReportPropertyChanging("FolderName");
                _FolderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FolderName");
                OnFolderNameChanged();
            }
        }
        private global::System.String _FolderName;
        partial void OnFolderNameChanging(global::System.String value);
        partial void OnFolderNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalPath
        {
            get
            {
                return _PhysicalPath;
            }
            set
            {
                OnPhysicalPathChanging(value);
                ReportPropertyChanging("PhysicalPath");
                _PhysicalPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalPath");
                OnPhysicalPathChanged();
            }
        }
        private global::System.String _PhysicalPath;
        partial void OnPhysicalPathChanging(global::System.String value);
        partial void OnPhysicalPathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Document_Folder", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("geekinsidekmsModel.FK_Document_Folder", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("geekinsidekmsModel.FK_Document_Folder", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_Department_Folder", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("geekinsidekmsModel.FK_Department_Folder", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("geekinsidekmsModel.FK_Department_Folder", "Department", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="SiteConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteConfig : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SiteConfig 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="propertyName">PropertyName 属性的初始值。</param>
        public static SiteConfig CreateSiteConfig(global::System.Int32 id, global::System.String propertyName)
        {
            SiteConfig siteConfig = new SiteConfig();
            siteConfig.Id = id;
            siteConfig.PropertyName = propertyName;
            return siteConfig;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyValue
        {
            get
            {
                return _PropertyValue;
            }
            set
            {
                OnPropertyValueChanging(value);
                ReportPropertyChanging("PropertyValue");
                _PropertyValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyValue");
                OnPropertyValueChanged();
            }
        }
        private global::System.String _PropertyValue;
        partial void OnPropertyValueChanging(global::System.String value);
        partial void OnPropertyValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDescription
        {
            get
            {
                return _PropertyDescription;
            }
            set
            {
                OnPropertyDescriptionChanging(value);
                ReportPropertyChanging("PropertyDescription");
                _PropertyDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyDescription");
                OnPropertyDescriptionChanged();
            }
        }
        private global::System.String _PropertyDescription;
        partial void OnPropertyDescriptionChanging(global::System.String value);
        partial void OnPropertyDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="SiteNews")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteNews : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SiteNews 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="newsContent">NewsContent 属性的初始值。</param>
        /// <param name="pubTime">PubTime 属性的初始值。</param>
        /// <param name="isOnTop">IsOnTop 属性的初始值。</param>
        public static SiteNews CreateSiteNews(global::System.Int32 id, global::System.String title, global::System.String newsContent, global::System.DateTime pubTime, global::System.Boolean isOnTop)
        {
            SiteNews siteNews = new SiteNews();
            siteNews.Id = id;
            siteNews.Title = title;
            siteNews.NewsContent = newsContent;
            siteNews.PubTime = pubTime;
            siteNews.IsOnTop = isOnTop;
            return siteNews;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewsContent
        {
            get
            {
                return _NewsContent;
            }
            set
            {
                OnNewsContentChanging(value);
                ReportPropertyChanging("NewsContent");
                _NewsContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewsContent");
                OnNewsContentChanged();
            }
        }
        private global::System.String _NewsContent;
        partial void OnNewsContentChanging(global::System.String value);
        partial void OnNewsContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PubTime
        {
            get
            {
                return _PubTime;
            }
            set
            {
                OnPubTimeChanging(value);
                ReportPropertyChanging("PubTime");
                _PubTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PubTime");
                OnPubTimeChanged();
            }
        }
        private global::System.DateTime _PubTime;
        partial void OnPubTimeChanging(global::System.DateTime value);
        partial void OnPubTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnTop
        {
            get
            {
                return _IsOnTop;
            }
            set
            {
                OnIsOnTopChanging(value);
                ReportPropertyChanging("IsOnTop");
                _IsOnTop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnTop");
                OnIsOnTopChanged();
            }
        }
        private global::System.Boolean _IsOnTop;
        partial void OnIsOnTopChanging(global::System.Boolean value);
        partial void OnIsOnTopChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Tag 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="tagName">TagName 属性的初始值。</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String tagName)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.TagName = tagName;
            return tag;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_DocumentTag_Tag", "DocumentTag")]
        public EntityCollection<DocumentTag> DocumentTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentTag>("geekinsidekmsModel.FK_DocumentTag_Tag", "DocumentTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentTag>("geekinsidekmsModel.FK_DocumentTag_Tag", "DocumentTag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="UserAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAdmin : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserAdmin 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="employeeNumber">EmployeeNumber 属性的初始值。</param>
        /// <param name="username">Username 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static UserAdmin CreateUserAdmin(global::System.Int32 id, global::System.Int32 employeeNumber, global::System.String username, global::System.String password)
        {
            UserAdmin userAdmin = new UserAdmin();
            userAdmin.Id = id;
            userAdmin.EmployeeNumber = employeeNumber;
            userAdmin.Username = username;
            userAdmin.Password = password;
            return userAdmin;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeNumber
        {
            get
            {
                return _EmployeeNumber;
            }
            set
            {
                OnEmployeeNumberChanging(value);
                ReportPropertyChanging("EmployeeNumber");
                _EmployeeNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeNumber");
                OnEmployeeNumberChanged();
            }
        }
        private global::System.Int32 _EmployeeNumber;
        partial void OnEmployeeNumberChanging(global::System.Int32 value);
        partial void OnEmployeeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginTime
        {
            get
            {
                return _LastLoginTime;
            }
            set
            {
                OnLastLoginTimeChanging(value);
                ReportPropertyChanging("LastLoginTime");
                _LastLoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginTime");
                OnLastLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginTime;
        partial void OnLastLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="UserEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEmployee : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserEmployee 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="employeeNumber">EmployeeNumber 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="departmentId">DepartmentId 属性的初始值。</param>
        /// <param name="isManager">IsManager 属性的初始值。</param>
        /// <param name="isChecker">IsChecker 属性的初始值。</param>
        /// <param name="isAvailable">IsAvailable 属性的初始值。</param>
        public static UserEmployee CreateUserEmployee(global::System.Int32 id, global::System.Int32 employeeNumber, global::System.String password, global::System.Int32 departmentId, global::System.Boolean isManager, global::System.Boolean isChecker, global::System.Boolean isAvailable)
        {
            UserEmployee userEmployee = new UserEmployee();
            userEmployee.Id = id;
            userEmployee.EmployeeNumber = employeeNumber;
            userEmployee.Password = password;
            userEmployee.DepartmentId = departmentId;
            userEmployee.IsManager = isManager;
            userEmployee.IsChecker = isChecker;
            userEmployee.IsAvailable = isAvailable;
            return userEmployee;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeNumber
        {
            get
            {
                return _EmployeeNumber;
            }
            set
            {
                OnEmployeeNumberChanging(value);
                ReportPropertyChanging("EmployeeNumber");
                _EmployeeNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeNumber");
                OnEmployeeNumberChanged();
            }
        }
        private global::System.Int32 _EmployeeNumber;
        partial void OnEmployeeNumberChanging(global::System.Int32 value);
        partial void OnEmployeeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManager
        {
            get
            {
                return _IsManager;
            }
            set
            {
                OnIsManagerChanging(value);
                ReportPropertyChanging("IsManager");
                _IsManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManager");
                OnIsManagerChanged();
            }
        }
        private global::System.Boolean _IsManager;
        partial void OnIsManagerChanging(global::System.Boolean value);
        partial void OnIsManagerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsChecker
        {
            get
            {
                return _IsChecker;
            }
            set
            {
                OnIsCheckerChanging(value);
                ReportPropertyChanging("IsChecker");
                _IsChecker = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsChecker");
                OnIsCheckerChanged();
            }
        }
        private global::System.Boolean _IsChecker;
        partial void OnIsCheckerChanging(global::System.Boolean value);
        partial void OnIsCheckerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAvailable
        {
            get
            {
                return _IsAvailable;
            }
            set
            {
                OnIsAvailableChanging(value);
                ReportPropertyChanging("IsAvailable");
                _IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAvailable");
                OnIsAvailableChanged();
            }
        }
        private global::System.Boolean _IsAvailable;
        partial void OnIsAvailableChanging(global::System.Boolean value);
        partial void OnIsAvailableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginTime
        {
            get
            {
                return _LastLoginTime;
            }
            set
            {
                OnLastLoginTimeChanging(value);
                ReportPropertyChanging("LastLoginTime");
                _LastLoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginTime");
                OnLastLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginTime;
        partial void OnLastLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("geekinsidekmsModel", "FK_UserEmployee_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("geekinsidekmsModel.FK_UserEmployee_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("geekinsidekmsModel.FK_UserEmployee_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("geekinsidekmsModel.FK_UserEmployee_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("geekinsidekmsModel.FK_UserEmployee_Department", "Department", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="geekinsidekmsModel", Name="UserEmployeeDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEmployeeDetail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserEmployeeDetail 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="employeeNumber">EmployeeNumber 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        public static UserEmployeeDetail CreateUserEmployeeDetail(global::System.Int32 id, global::System.Int32 employeeNumber, global::System.String name, global::System.String email)
        {
            UserEmployeeDetail userEmployeeDetail = new UserEmployeeDetail();
            userEmployeeDetail.Id = id;
            userEmployeeDetail.EmployeeNumber = employeeNumber;
            userEmployeeDetail.Name = name;
            userEmployeeDetail.Email = email;
            return userEmployeeDetail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeNumber
        {
            get
            {
                return _EmployeeNumber;
            }
            set
            {
                OnEmployeeNumberChanging(value);
                ReportPropertyChanging("EmployeeNumber");
                _EmployeeNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeNumber");
                OnEmployeeNumberChanged();
            }
        }
        private global::System.Int32 _EmployeeNumber;
        partial void OnEmployeeNumberChanging(global::System.Int32 value);
        partial void OnEmployeeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
    }

    #endregion
    
}
